# File: .github/workflows/codeql-analysis.yml
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '43 7 * * 3'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ matrix.language == 'swift' && 'macos-latest' || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: none          # No compiled‐language scan
          - language: java-kotlin
            build-mode: manual
          - language: swift
            build-mode: manual

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Flutter CLI (so `flutter` is available)
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.29.0'

      # 1) Run `flutter pub get` inside everyday_cyber/
      - name: Flutter pub get
        working-directory: everyday_cyber
        run: flutter pub get
        shell: bash

      # 2) Initialize CodeQL (Dart itself isn’t scanned, but building Android/macOS needs Dart deps)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      # 3) Build Android (Java/Kotlin) in everyday_cyber/android/
      - name: Build Android (Java/Kotlin)
        if: matrix.language == 'java-kotlin'
        working-directory: everyday_cyber/android
        run: ./gradlew assembleDebug
        shell: bash

      # 4) Build macOS (Swift) in everyday_cyber/
      - name: Build macOS (Swift)
        if: matrix.language == 'swift'
        working-directory: everyday_cyber
        run: flutter build macos --release
        shell: bash

      # 5) Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
